{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","limit","sortBy","fetch","then","res","json","data","children","map","catch","console","log","err","searchform","document","getElementById","searchInput","addEventListener","value","querySelector","showMessage","output","results","forEach","image","post","preview","images","source","url","title","truncateText","selftext","subreddit","score","innerHTML","e","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","shortened","indexOf","substring"],"mappings":"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","file":"search_app.map","sourcesContent":["export default {\n    search: function (searchTerm, limit, sortBy) {\n       return fetch(`http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${limit}`)\n            .then(res => res.json())\n            .then(data => data.data.children.map(data => (data.data)))\n            .catch(err => console.log(err));\n    }\n}","import reddit from './redditapi';\n\nconst searchform = document.getElementById('search-form');\nconst searchInput = document.getElementById('search-input');\n\nsearchform.addEventListener('submit', e => {\n    //Get searchTerm \n    const searchTerm = searchInput.value;\n\n    //Get sort by selection\n    const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n\n    //Get limit\n    const limit = document.getElementById('limit').value;\n\n    //check input\n    if (searchTerm === '') {\n        //show Message\n        showMessage('Please add a Search Term ', 'alert-danger');\n    }\n\n    //clear input\n    searchInput.value = '';\n\n    //search reddit\n    reddit.search(searchTerm, limit, sortBy).then(results => {\n        let output = '<div class=\"card-columns\">';\n        //loop through  posts\n        results.forEach(post => {\n\n            // check for image\n            const image = post.preview ? post.preview.images[0].source.url:'https://upload.wikimedia.org/wikipedia/commons/4/43/Reddit.svg'\n\n            output += `\n            <div class=\"card\" >\n            <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">${post.title}</h5>\n                <p class=\"card-text\">${truncateText(post.selftext,100)}</p>\n                <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read More...</a>\n                <hr>\n                <span class=\"badge badge-secondary\"> Subreddit : ${post.subreddit} </span>\n                <span class=\"badge badge-secondary\"> Subreddit : ${post.score} </span>\n            </div>\n            </div>  `\n        });\n        output += `</div>`;\n        document.getElementById('results').innerHTML=output;\n    });\n\n    console.log(limit);\n    console.log(sortBy);\n    console.log(searchTerm);\n    e.preventDefault(); // if this method is called, the default action of the event will not be triggered\n});\n\n\n//show message\nfunction showMessage(message, className) {\n    //create div\n    const div = document.createElement('div');\n    // Add CSS Class\n    div.className = `alert ${className}`;\n    //Add Text\n    div.appendChild(document.createTextNode(message));\n\n    //Get Parent\n    const searchContainer = document.getElementById('search-container');\n\n    //Get Search\n    const search = document.getElementById('search');\n\n    //Insert Message\n    searchContainer.insertBefore(div, search);\n\n    //Timeout alert\n    setTimeout(() => document.querySelector('.alert').remove(), 3000);\n}\n\n\nfunction truncateText(text,limit){\n const shortened = text.indexOf(' ',limit);\n if(shortened == -1) return text;\n return text.substring(0,shortened);\n\n}"]}